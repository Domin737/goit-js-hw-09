{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAI/B,GAHAD,EAAWE,OAAOF,GAClBC,EAAQC,OAAOD,GAEXE,MAAMH,IAAaG,MAAMF,GAC3B,MAAM,IAAIG,MAAM,6BAGlB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA8CbW,SAASC,cAAc,SAASC,iBAAiB,UA1CjD,SAA0BC,GACxBA,EAAMC,iBAEN,MACMC,EADOF,EAAMG,OACGD,SAEtB,IACE,MAAME,EAAajB,OAAOe,EAASG,UAAU,SAASC,OAChDC,EAAYpB,OAAOe,EAASG,UAAU,QAAQC,OAC9CE,EAASrB,OAAOe,EAASG,UAAU,UAAUC,OAEnD,GAAIlB,MAAMgB,IAAehB,MAAMmB,IAAcnB,MAAMoB,GACjD,MAAM,IAAInB,MAAM,wBAGlB,MAAMoB,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAChC,MAAMC,EAAeP,EAAaG,GAAaG,EAAI,GACnDD,EAASG,KAAK5B,EAAc0B,EAAGC,G,CAGjCrB,QAAQuB,IAAIJ,GAAUK,MACpBC,IACEA,EAAQC,SAAQ,EAAC/B,SAAEA,EAAQC,MAAEA,MAC3B+B,EAAAnC,GAASoC,OAAOC,QACd,uBAAqBlC,QAAiBC,MAAU,GAElD,IAEJkC,IACEA,EAAOJ,SAAQ,EAAC/B,SAAEA,EAAQC,MAAEA,MAC1B+B,EAAAnC,GAASoC,OAAOG,QACd,sBAAoBpC,QAAeC,MAAU,GAE/C,G,CAGN,MAAOoC,GACPL,EAAAnC,GAASoC,OAAOG,QAAQC,EAAMC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  position = Number(position);\n  delay = Number(delay);\n\n  if (isNaN(position) || isNaN(delay)) {\n    throw new Error('Invalid position or delay');\n  }\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  const form = event.target;\n  const elements = form.elements;\n\n  try {\n    const firstDelay = Number(elements.namedItem('delay').value);\n    const delayStep = Number(elements.namedItem('step').value);\n    const amount = Number(elements.namedItem('amount').value);\n\n    if (isNaN(firstDelay) || isNaN(delayStep) || isNaN(amount)) {\n      throw new Error('Invalid input values');\n    }\n\n    const promises = [];\n    for (let i = 1; i <= amount; i++) {\n      const currentDelay = firstDelay + delayStep * (i - 1);\n      promises.push(createPromise(i, currentDelay));\n    }\n\n    Promise.all(promises).then(\n      results => {\n        results.forEach(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        });\n      },\n      errors => {\n        errors.forEach(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      }\n    );\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n\ndocument.querySelector('.form').addEventListener('submit', handleFormSubmit);\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Number","isNaN","Error","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","target","firstDelay","namedItem","value","delayStep","amount","promises","i","currentDelay","push","all","then","results","forEach","$parcel$interopDefault","Notify","success","errors","failure","error","message"],"version":3,"file":"03-promises.c98e2bcb.js.map"}